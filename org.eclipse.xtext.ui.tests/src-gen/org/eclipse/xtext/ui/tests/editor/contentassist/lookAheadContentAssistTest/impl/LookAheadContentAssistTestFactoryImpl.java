/**
 * generated by Xtext
 */
package org.eclipse.xtext.ui.tests.editor.contentassist.lookAheadContentAssistTest.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.eclipse.xtext.ui.tests.editor.contentassist.lookAheadContentAssistTest.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LookAheadContentAssistTestFactoryImpl extends EFactoryImpl implements LookAheadContentAssistTestFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LookAheadContentAssistTestFactory init()
  {
    try
    {
      LookAheadContentAssistTestFactory theLookAheadContentAssistTestFactory = (LookAheadContentAssistTestFactory)EPackage.Registry.INSTANCE.getEFactory(LookAheadContentAssistTestPackage.eNS_URI);
      if (theLookAheadContentAssistTestFactory != null)
      {
        return theLookAheadContentAssistTestFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LookAheadContentAssistTestFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LookAheadContentAssistTestFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LookAheadContentAssistTestPackage.MODEL: return createModel();
      case LookAheadContentAssistTestPackage.ATTRIBUTE: return createAttribute();
      case LookAheadContentAssistTestPackage.PAIR: return createPair();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Attribute createAttribute()
  {
    AttributeImpl attribute = new AttributeImpl();
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Pair createPair()
  {
    PairImpl pair = new PairImpl();
    return pair;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LookAheadContentAssistTestPackage getLookAheadContentAssistTestPackage()
  {
    return (LookAheadContentAssistTestPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LookAheadContentAssistTestPackage getPackage()
  {
    return LookAheadContentAssistTestPackage.eINSTANCE;
  }

} //LookAheadContentAssistTestFactoryImpl
